!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("io"),require("axios")):"function"==typeof define&&define.amd?define(["io","axios"],t):"object"==typeof exports?exports.DeepJsonConnector=t(require("io"),require("axios")):e.DeepJsonConnector=t(e.io,e.axios)}(this,(function(e,t){return s={508:function(e,t,s){var r,n,o;o="undefined"!=typeof self?self:this,r=[s(742),s(676)],void 0===(n=function(e,t){return function(e,t,s,r){class n{constructor(t){this.baseURL=t.baseURL,this.token=t.token||null,this.storage=t.storage||"memory",this.binary=!1,this.overwriteKey=!1,this.isNode="undefined"!=typeof process&&process.versions?.node,this.axios=e.create({baseURL:this.baseURL,timeout:t.timeout||1e4,headers:{Accept:"application/json","User-Agent":"DeepJSONConnector/1.0"}})}async login(e,t){try{const s=await this.axios.post("auth/login",{username:e,password:t});return this.token=s.data.token,s.data}catch(e){this._handleError(e)}}getToken(){return this.token}isBinary(){return this.binary}setBinary(e){return this.binary=e,this}isOverwriteKey(){return this.overwriteKey}setOverwriteKey(e){return this.overwriteKey=e,this}async get(e,t=void 0,s=void 0){const r={},n={};let o="GET";return(t||s)&&(r["X-Method-Override"]="GET",o="POST"),this.binary&&(n.binary=!0,n.token=this.token),this._request({method:o,uri:`/keys/${e}`,query:n,data:t,headers:r,script:s})}async post(e,t,s=void 0){const r={};return this.overwriteKey&&(r["X-Override-Existing"]="true"),this._request({method:"POST",uri:`/keys/${e}`,query:null,data:t,headers:r,script:s})}async put(e,t,s=void 0){return this._request({method:"PUT",uri:`/keys/${e}`,query:null,data:t,headers:{},script:s})}async delete(e){return this._request({method:"DELETE",uri:`/keys/${e}`,query:null,data:value,headers:{},script:null})}async move(e,t){var s={from:e,to:t};return this._request({method:"POST",uri:"/cmd/move",data:JSON.stringify(s),header:{"Content-Type":"application/json; charset=utf-8"}})}async uploadFile(e,s,n={}){let o;if(this.isNode){const e=r.createReadStream(s),n=r.statSync(s);o=new t,o.append("file",e,{filename:s.name,size:n.size})}else o=new t,o.append("file",s,s.name);const i={...this.isNode?o.getHeaders():{},"X-Override-Existing":n.overwrite?"true":"false"};return this._request({method:"POST",uri:`/keys/${e}`,data:o,header:i})}async listKeys(e){let t;return e&&(e.test?(t=e.toString(),t=t.substring(1,t.length-1)):t=e),this._request({method:"GET",uri:"/cmd/keys",query:{keys:t}})}async _request(e){if(e.script&&e.script.length>0){const t="javascript:\n"+e.script+"\n\njavascript!\n\n"+("string"==typeof e.data?e.data:JSON.stringify(e.data,null,2));e.data=t}try{const s={method:e.method,url:e.uri,headers:{...e.headers,...this.token&&{Authorization:`Bearer ${this.token}`}},params:e.query||{},data:e.data};return!this.isNode&&e.data instanceof t?(s.data=e.data,delete s.headers["Content-Type"]):s.headers["Content-Type"]||(s.headers["Content-Type"]="text/plain; charset=utf-8"),this._resetFlags(),this.axios.getUri(s),(await this.axios(s)).data}catch(e){this._handleError(e)}}_resetFlags(){this.binary=!1,this.overwriteKey=!1}_handleError(e){if(e.response){const t=new Error(`API Error: ${e.response.status} ${e.response.statusText}`);throw t.status=e.response.status,t.details=e.response.data,t}throw e.request?new Error("Network Error: No response from server"):new Error(`Request Error: ${e.message}`)}}class o extends n{constructor(e){super(e),this.socket=null,this.sessionHandlers=new Map,this.currentChannel=null}async createSession(){return this.socket&&this.disconnect(),this.socket=s(this.baseURL,{query:{token:this.token,action:"create"}}),new Promise(((e,t)=>{this.socket.on("session-created",(({channelId:t})=>{this.currentChannel=t,this._setupSocketListeners(),e(t)})),this.socket.on("error",t)}))}async joinSession(e){if(!e)throw new Error("Channel ID required");return this.socket&&this.disconnect(),this.socket=s(this.baseURL,{query:{token:this.token,action:"connect",channelId:e}}),new Promise(((t,s)=>{this.socket.on("session-joined",(s=>{this.currentChannel=e,this._setupSocketListeners(),t(s)})),this.socket.on("error",s)}))}on(e,t){this.sessionHandlers.has(e)||this.sessionHandlers.set(e,[]),this.sessionHandlers.get(e).push(t),this.socket&&this.socket.on(e,t)}off(e,t){if(this.sessionHandlers.has(e)){const s=this.sessionHandlers.get(e),r=s.indexOf(t);r>-1&&s.splice(r,1)}this.socket&&this.socket.off(e,t)}send(e,t){if(!this.socket||!this.socket.connected)throw new Error("Not connected to a session");this.socket.emit("message",{type:e,data:t})}disconnect(){this.socket&&(this.socket.disconnect(),this.socket=null,this.currentChannel=null)}reconnect(){if(this.currentChannel)return this.joinSession(this.currentChannel)}_setupSocketListeners(){this.socket&&(["connect","disconnect","reconnect","reconnecting"].forEach((e=>{this.socket.on(e,((...t)=>{this.sessionHandlers.get(e)?.forEach((e=>e(...t)))}))})),this.socket.on("message",(e=>{(this.sessionHandlers.get(e.type)||[]).forEach((t=>t(e.data)))})))}async login(e,t){const s=await super.login(e,t);return this.socket&&(this.socket.io.opts.query.token=this.token,this.reconnect()),s}}return{Connector:n,SyncConnector:o,DeepJSONConnector:n,DeepJSONSyncConnector:o}}(e,o.FormData,t)}.apply(t,r))||(e.exports=n)},676:function(t){"use strict";t.exports=e},742:function(e){"use strict";e.exports=t}},r={},function e(t){var n=r[t];if(void 0!==n)return n.exports;var o=r[t]={exports:{}};return s[t].call(o.exports,o,o.exports,e),o.exports}(508);var s,r}));